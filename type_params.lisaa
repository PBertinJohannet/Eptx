Class Point<T : Add> {
    T x = T();
    T y = T();
}


fn add3<T : Add>(T a, T b, T c) -> T {
   return a.add(b) + c;
   //return a.add(1) + c;
}

fn nestedparams<T : Add, U : Add>(T a, T b, U c) {

}

fn callnestedparams<U : Add>(U a) {
    nestedparams(1, 2, a);
}

trait Add = method add(Self) -> Self;


fn main(){
    Point<num> p = Point::<num>();
    p = add3(p, p, p);
    callnestedparams(p);
}
